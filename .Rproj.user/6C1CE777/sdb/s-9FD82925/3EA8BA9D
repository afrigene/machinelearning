{
    "contents" : "library(caret)\nlibrary(kernlab)\nlibrary(ggplot2)\n\n\ndata(spam)\n\ninTrain <- createDataPartition(y=spam$type, p=0.75, list=FALSE)\n\n# create TEST and TRAIN data sets\ntraining <- spam[inTrain,]\ntesting <- spam[-inTrain,]\n\n# cross validation using K-folds\nset.seed(32376)\nfolds <- createFolds(y=spam$type, k=10, list=TRUE, returnTrain=FALSE)\nsapply(folds, length)\n\n# cross validation using resampling\nset.seed(32376)\nfolds <- createResample(y=spam$type, times=10, list=TRUE)\nsapply(folds, length)\n\n# cross validation using time slices\nset.seed(32376)\ntme <- 1:1000\nfolds <- createTimeSlices(y=tme, initialWindow=20, horizon=10)\nnames(folds)\n\n# create model\n# metric parameter: continuous outcome-RMSE, categorical outcome: Accuracy or Kappa\nmodelFit <- train(type ~., data=training, method=\"glm\")\npredictions <- predict(modelFit, newdata = testing)\n\nconfusionMatrix(predictions, testing$type)\n\n\n## Visualization\nlibrary(ISLR)\ndata(Wage)\nsummary(Wage)\n\nset.seed(32376)\ninTrain <- createDataPartition(y=Wage$wage, p=0.7, list=FALSE)\ntraining <- Wage[inTrain,]\ntesting <- Wage[-inTrain,]\n\nfeaturePlot(x=training[, c(\"age\", \"education\", \"jobclass\")], y=training$wage, plot=\"pairs\")\nqplot(age, wage,data=training)\nqplot(age, wage,colour=jobclass,data=training)\nqplot(age,wage, colour=education, data=training) + geom_smooth(method=\"lm\", formula=y~x)\nqplot(wage, colour=education, data=training, geom=\"density\")\n\n# create dummy variables from factors\ntable(training$jobclass)\ndummies <- dummyVars(wage ~ jobclass, data=training)\nhead(predict(dummies, newdata=training))\n\n# removing zero covariates\nnsv <- nearZeroVar(training, saveMetrics=TRUE)\nnsv\n\n### QUIZ 2\n\n# Question 1\nlibrary(AppliedPredictiveModeling)\ndata(AlzheimerDisease)\n\nadData = data.frame(diagnosis,predictors)\ntestIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)\ntraining = adData[-testIndex,]\ntesting = adData[testIndex,]\n\n\n#Question 2\nlibrary(AppliedPredictiveModeling)\nlibrary(data.table)\ndata(concrete)\nset.seed(1000)\ninTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]\ntraining = mixtures[ inTrain,]\ntesting = mixtures[-inTrain,]\n\npreObj <- preProcess(training[,-9], method=c(\"center\", \"scale\"))\ntrainCS <- predict(preObj, training[,-9])$CompressiveStrength\nmean(training[,9])\nmean(trainCS)\n\n\n# Question 3\nlibrary(AppliedPredictiveModeling)\nset.seed(3433)\ndata(AlzheimerDisease)\nadData = data.frame(diagnosis,predictors)\ninTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]\ntraining = adData[ inTrain,]\ntesting = adData[-inTrain,]\n\nIL_predictors <- colnames(training)[colnames(training) %like% 'IL']\n\npreObj <- preProcess(training[IL_predictors], method=c(\"pca\"), thresh=0.8)\n\n# Question 4\nlibrary(AppliedPredictiveModeling)\nset.seed(3433)\ndata(AlzheimerDisease)\n\n# only use predictors starting with IL\nIL_predictors <- colnames(predictors)[grep(\"^IL\", colnames(predictors))]\nadData = data.frame(diagnosis,predictors[IL_predictors])\n\ninTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]\ntraining = adData[ inTrain,]\ntesting = adData[-inTrain,]\n\nmodelFit <- train(diagnosis ~., data=training, method=\"glm\")\npredictions <- predict(modelFit, newdata = testing)\n\nconfusionMatrix(predictions, testing$diagnosis)\n\n\n#### QUIZ 3\n#Question 1\n#a. PS \n#b. WS \n#c. PS\n#d. Not possible to predict \n\n#Question 2\n#The bias is larger and the variance is smaller. Under leave one out cross validation K is equal to the sample size.\n\n#Question 3\n#2.783. It is strange because Area should be a qualitative variable - but tree is reporting the average value of Area as a numeric variable in the leaf predicted for newdata\n\n#Question 4\n#Test Set Misclassification: 0.31 \n#Training Set: 0.27\n\n#Question 5\n#The order of the variables is:\n#  x.2, x.1, x.5, x.6, x.8, x.4, x.9, x.3, x.7,x.10\n\n# Question 1\nlibrary(data.table)\nlibrary(AppliedPredictiveModeling)\ndata(segmentationOriginal)\nset.seed(125 )\nsegmentationOriginal <- data.table(segmentationOriginal)\n\ntraining <- segmentationOriginal[ Case==\"Train\",]\ntesting <- segmentationOriginal[ Case==\"Test\",]\nmodelFit <- train(Class ~ ., method=\"rpart\", data=training)\nprint(modelFit$finalModel)\n\nplot(modelFit$finalModel, uniform=TRUE, main=\"Classification Tree\")\ntext(modelFit$finalModel, use.n=TRUE, all=TRUE, cex=.8)\nlibrary(rattle)\nfancyRpartPlot(modelFit$finalModel)\n\npredictions <- predict(modelFit, newdata = testing)\nconfusionMatrix(predictions, testing$Class)\n\n# Question 2\nBias is larger and variance smaller. K = sample size for leave one out cross validation\n\n# Question 3\nlibrary(pgmm)\ndata(olive)\nolive = olive[,-1]\n\nmodelFit <- train(Area ~ ., method=\"rpart\", data=olive)\nnewdata = as.data.frame(t(colMeans(olive)))\npredict(modelFit, newdata = newdata)\n\n# Question 4\nlibrary(ElemStatLearn)\ndata(SAheart)\nset.seed(8484)\nSAheart$chd <- factor(SAheart$chd)\ntrain = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)\n\n\ntrainSA = SAheart[train,]\ntestSA = SAheart[-train,]\n\nset.seed(13234)\nmodelFit <- train(chd ~ age + alcohol + obesity + tobacco + typea + ldl, \n                  family=binomial(), \n                  method=\"glm\", \n                  data=trainSA)\n\n                       \nmissClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}\n\npredictions <- predict(modelFit, newdata = trainSA)\nmissClass(as.numeric(as.character(trainSA$chd)), as.numeric(as.character(predictions)))\n\npredictions <- predict(modelFit, newdata = testSA)\nmissClass(as.numeric(as.character(testSA$chd)), as.numeric(as.character(predictions)))\n\n\n# Question 5\nlibrary(ElemStatLearn)\ndata(vowel.train)\ndata(vowel.test) \n\nvowel.train$y <- factor(vowel.train$y)\nvowel.test$y <- factor(vowel.test$y)\n\nset.seed(33833)\nmodelFit <- train(y ~ .,method=\"rf\", data=vowel.train)\nvarImp(modelFit)\n\n\n####### COURSE PROJECT ##################\ntesting <- read.csv(file=\"pml-training.csv\", header=TRUE, )\n\n",
    "created" : 1439494962584.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4021589767",
    "id" : "3EA8BA9D",
    "lastKnownWriteTime" : 1440173211,
    "path" : "~/Classes/Machine Learning/quiz2.R",
    "project_path" : "quiz2.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}